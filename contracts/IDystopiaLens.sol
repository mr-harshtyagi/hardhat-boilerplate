// SPDX-License-Identifier: UNLICENSED
// !! THIS FILE WAS AUTOGENERATED BY abi-to-sol v0.6.4. SEE SOURCE BELOW. !!
pragma solidity >=0.7.0 <0.9.0;
pragma experimental ABIEncoderV2;

interface IDystopiaLens {
    struct PositionPool {
        address id;
        uint256 balanceOf;
    }

    struct PositionBribesByTokenId {
        uint256 tokenId;
        PositionPool[] bribes;
    }

    struct Pool {
        address id;
        string symbol;
        bool stable;
        address token0Address;
        address token1Address;
        address gaugeAddress;
        address bribeAddress;
        address[] bribeTokensAddresses;
        address fees;
        uint256 totalSupply;
    }

    struct PoolReserveData {
        address id;
        address token0Address;
        address token1Address;
        uint256 token0Reserve;
        uint256 token1Reserve;
        uint8 token0Decimals;
        uint8 token1Decimals;
    }

    struct PositionVe {
        uint256 tokenId;
        uint256 balanceOf;
        uint256 locked;
    }

    struct ProtocolMetadata {
        address veAddress;
        address dystAddress;
        address voterAddress;
        address poolsFactoryAddress;
        address gaugesFactoryAddress;
        address minterAddress;
    }

    function bribeAddresByPoolAddress(address poolAddress)
        external
        view
        returns (address);

    function bribeTokensAddressesByBribeAddress(address bribeAddress)
        external
        view
        returns (address[] memory);

    function bribeTokensAddressesByPoolAddress(address poolAddress)
        external
        view
        returns (address[] memory);

    function bribesAddresses() external view returns (address[] memory);

    function bribesPositionsOf(
        address accountAddress,
        address poolAddress,
        uint256 tokenId
    ) external view returns (IDystopiaLens.PositionPool[] memory);

    function bribesPositionsOf(address accountAddress, address poolAddress)
        external
        view
        returns (IDystopiaLens.PositionBribesByTokenId[] memory);

    function dystAddress() external view returns (address);

    function gaugeAddressByPoolAddress(address poolAddress)
        external
        view
        returns (address);

    function gaugesAddresses() external view returns (address[] memory);

    function gaugesFactoryAddress() external view returns (address);

    function initializeProxyStorage(address _veAddress) external;

    function minterAddress() external view returns (address);

    function ownerAddress() external view returns (address);

    function poolInfo(address poolAddress)
        external
        view
        returns (IDystopiaLens.Pool memory);

    function poolReservesInfo(address poolAddress)
        external
        view
        returns (IDystopiaLens.PoolReserveData memory);

    function poolsAddresses() external view returns (address[] memory);

    function poolsFactoryAddress() external view returns (address);

    function poolsInfo() external view returns (IDystopiaLens.Pool[] memory);

    function poolsLength() external view returns (uint256);

    function poolsPositionsOf(address accountAddress)
        external
        view
        returns (IDystopiaLens.PositionPool[] memory);

    function poolsPositionsOf(
        address accountAddress,
        uint256 startIndex,
        uint256 endIndex
    ) external view returns (IDystopiaLens.PositionPool[] memory);

    function poolsReservesInfo(address[] memory _poolsAddresses)
        external
        view
        returns (IDystopiaLens.PoolReserveData[] memory);

    function protocolMetadata() external view returns (ProtocolMetadata memory);

    function proxyStorageInitialized() external view returns (bool);

    function routerAddress() external view returns (address);

    function setOwnerAddress(address _ownerAddress) external;

    function setVeAddress(address _veAddress) external;

    function veAddress() external view returns (address);

    function veDistAddress() external view returns (address);

    function vePositionsOf(address accountAddress)
        external
        view
        returns (IDystopiaLens.PositionVe[] memory);

    function veTokensIdsOf(address accountAddress)
        external
        view
        returns (uint256[] memory);

    function voterAddress() external view returns (address);
}

// THIS FILE WAS AUTOGENERATED FROM THE FOLLOWING ABI JSON:
/*
[{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"bribeAddresByPoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"bribeAddress","type":"address"}],"name":"bribeTokensAddressesByBribeAddress","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"bribeTokensAddressesByPoolAddress","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bribesAddresses","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"accountAddress","type":"address"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"bribesPositionsOf","outputs":[{"components":[{"internalType":"address","name":"bribeTokenAddress","type":"address"},{"internalType":"uint256","name":"earned","type":"uint256"}],"internalType":"struct IDystopiaLens.PositionBribe[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"accountAddress","type":"address"},{"internalType":"address","name":"poolAddress","type":"address"}],"name":"bribesPositionsOf","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"components":[{"internalType":"address","name":"bribeTokenAddress","type":"address"},{"internalType":"uint256","name":"earned","type":"uint256"}],"internalType":"struct IDystopiaLens.PositionBribe[]","name":"bribes","type":"tuple[]"}],"internalType":"struct IDystopiaLens.PositionBribesByTokenId[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dystAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"gaugeAddressByPoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gaugesAddresses","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gaugesFactoryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_veAddress","type":"address"}],"name":"initializeProxyStorage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"minterAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ownerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"poolInfo","outputs":[{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"token0Address","type":"address"},{"internalType":"address","name":"token1Address","type":"address"},{"internalType":"address","name":"gaugeAddress","type":"address"},{"internalType":"address","name":"bribeAddress","type":"address"},{"internalType":"address[]","name":"bribeTokensAddresses","type":"address[]"},{"internalType":"address","name":"fees","type":"address"},{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"internalType":"struct IDystopiaLens.Pool","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"poolReservesInfo","outputs":[{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"address","name":"token0Address","type":"address"},{"internalType":"address","name":"token1Address","type":"address"},{"internalType":"uint256","name":"token0Reserve","type":"uint256"},{"internalType":"uint256","name":"token1Reserve","type":"uint256"},{"internalType":"uint8","name":"token0Decimals","type":"uint8"},{"internalType":"uint8","name":"token1Decimals","type":"uint8"}],"internalType":"struct IDystopiaLens.PoolReserveData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolsAddresses","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolsFactoryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolsInfo","outputs":[{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"bool","name":"stable","type":"bool"},{"internalType":"address","name":"token0Address","type":"address"},{"internalType":"address","name":"token1Address","type":"address"},{"internalType":"address","name":"gaugeAddress","type":"address"},{"internalType":"address","name":"bribeAddress","type":"address"},{"internalType":"address[]","name":"bribeTokensAddresses","type":"address[]"},{"internalType":"address","name":"fees","type":"address"},{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"internalType":"struct IDystopiaLens.Pool[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"accountAddress","type":"address"}],"name":"poolsPositionsOf","outputs":[{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"uint256","name":"balanceOf","type":"uint256"}],"internalType":"struct IDystopiaLens.PositionPool[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"accountAddress","type":"address"},{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"endIndex","type":"uint256"}],"name":"poolsPositionsOf","outputs":[{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"uint256","name":"balanceOf","type":"uint256"}],"internalType":"struct IDystopiaLens.PositionPool[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_poolsAddresses","type":"address[]"}],"name":"poolsReservesInfo","outputs":[{"components":[{"internalType":"address","name":"id","type":"address"},{"internalType":"address","name":"token0Address","type":"address"},{"internalType":"address","name":"token1Address","type":"address"},{"internalType":"uint256","name":"token0Reserve","type":"uint256"},{"internalType":"uint256","name":"token1Reserve","type":"uint256"},{"internalType":"uint8","name":"token0Decimals","type":"uint8"},{"internalType":"uint8","name":"token1Decimals","type":"uint8"}],"internalType":"struct IDystopiaLens.PoolReserveData[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolMetadata","outputs":[{"components":[{"internalType":"address","name":"veAddress","type":"address"},{"internalType":"address","name":"dystAddress","type":"address"},{"internalType":"address","name":"voterAddress","type":"address"},{"internalType":"address","name":"poolsFactoryAddress","type":"address"},{"internalType":"address","name":"gaugesFactoryAddress","type":"address"},{"internalType":"address","name":"minterAddress","type":"address"}],"internalType":"struct DystopiaLens.ProtocolMetadata","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxyStorageInitialized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"routerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_ownerAddress","type":"address"}],"name":"setOwnerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_veAddress","type":"address"}],"name":"setVeAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"veAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"veDistAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"accountAddress","type":"address"}],"name":"vePositionsOf","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"balanceOf","type":"uint256"},{"internalType":"uint256","name":"locked","type":"uint256"}],"internalType":"struct IDystopiaLens.PositionVe[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"accountAddress","type":"address"}],"name":"veTokensIdsOf","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"voterAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]
*/
